AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  SSHKey:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Default: mervi-north-virginia-kp
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  PreferredInstanceType:
    Type: String
    Default: 't2.micro'
  AZ:
    Type: String
    Default: 'us-east-1a'
Resources:
  CfnInitInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref AZ
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref PreferredInstanceType
      KeyName: !Ref SSHKey
      Tags:
        - Key: Name
          Value: Mervi-cfn-init
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      UserData: 
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            # Get the latest CloudFormation package
            yum update -y aws-cfn-bootstrap
            # Start cfn-init
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r CfnInitInstance --region ${AWS::Region}
            # Start cfn-signal to the wait condition
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource SampleWaitCondition --region ${AWS::Region}
    Metadata:
      Comment: Install a simple Apache HTTP page
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          files:
            "/var/www/html/index.html":
              content: |
                <h1>Hello cfn-init!</h1>
              mode: '000644'
          commands:
            hello:
              command: "echo 'Hello cnf-init' && exit 0"
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH and HTTP
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80

  SampleWaitCondition:
    CreationPolicy:
      ResourceSignal:
        Timeout: PT2M
        Count: 1
    Type: AWS::CloudFormation::WaitCondition


